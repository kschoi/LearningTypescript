{"id":"../node_modules/faker/lib/tree.js","dependencies":[{"name":"C:\\Users\\Administrator\\dev\\LearningTypescript\\maps\\package.json","includedInParent":true,"mtime":1571447547300},{"name":"C:\\Users\\Administrator\\dev\\LearningTypescript\\node_modules\\faker\\package.json","includedInParent":true,"mtime":1571448058400},{"name":"../index","loc":{"line":1,"column":20},"parent":"C:\\Users\\Administrator\\dev\\LearningTypescript\\node_modules\\faker\\lib\\tree.js","resolved":"C:\\Users\\Administrator\\dev\\LearningTypescript\\node_modules\\faker\\index.js"}],"generated":{"js":"var Faker = require('../index');\n\nvar tree = {\n\n    clone: function clone(obj) {\n        if (obj == null || typeof(obj) != 'object')\n            return obj;\n\n        var temp = obj.constructor(); // changed\n\n        for (var key in obj) {\n            temp[key] = this.clone(obj[key]);\n        }\n        return temp;\n    },\n\n    createTree: function (depth, width, obj) {\n        if (!obj) {\n            throw {\n                name: \"ObjectError\",\n                message: \"there needs to be an object passed in\"\n            };\n        }\n\n\n        if (width <= 0) {\n            throw {\n                name: \"TreeParamError\",\n                message: \"width must be greater than zero\"\n            };\n        }\n\n        var newObj = this.clone(obj);\n\n        for (var prop in newObj) {\n            if (newObj.hasOwnProperty(prop)) {\n                var value = null;\n                if (newObj[prop] !== \"__RECURSE__\") {\n                    value = eval(newObj[prop]);\n                }\n                else {\n                    if (depth !== 0) {\n                        value = [];\n                        var evalWidth = 1;\n\n                        if (typeof(width) == \"function\") {\n                            evalWidth = width();\n                        }\n                        else {\n                            evalWidth = width;\n                        }\n\n                        for (var i = 0; i < evalWidth; i++) {\n                            value.push(this.createTree(depth - 1, width, obj));\n                        }\n\n                    }\n                }\n\n                newObj[prop] = value;\n            }\n        }\n\n        return newObj;\n    }\n\n};\n\nmodule.exports = tree;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/faker/lib/tree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/faker/lib/tree.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}}],"sources":{"../node_modules/faker/lib/tree.js":"var Faker = require('../index');\n\nvar tree = {\n\n    clone: function clone(obj) {\n        if (obj == null || typeof(obj) != 'object')\n            return obj;\n\n        var temp = obj.constructor(); // changed\n\n        for (var key in obj) {\n            temp[key] = this.clone(obj[key]);\n        }\n        return temp;\n    },\n\n    createTree: function (depth, width, obj) {\n        if (!obj) {\n            throw {\n                name: \"ObjectError\",\n                message: \"there needs to be an object passed in\"\n            };\n        }\n\n\n        if (width <= 0) {\n            throw {\n                name: \"TreeParamError\",\n                message: \"width must be greater than zero\"\n            };\n        }\n\n        var newObj = this.clone(obj);\n\n        for (var prop in newObj) {\n            if (newObj.hasOwnProperty(prop)) {\n                var value = null;\n                if (newObj[prop] !== \"__RECURSE__\") {\n                    value = eval(newObj[prop]);\n                }\n                else {\n                    if (depth !== 0) {\n                        value = [];\n                        var evalWidth = 1;\n\n                        if (typeof(width) == \"function\") {\n                            evalWidth = width();\n                        }\n                        else {\n                            evalWidth = width;\n                        }\n\n                        for (var i = 0; i < evalWidth; i++) {\n                            value.push(this.createTree(depth - 1, width, obj));\n                        }\n\n                    }\n                }\n\n                newObj[prop] = value;\n            }\n        }\n\n        return newObj;\n    }\n\n};\n\nmodule.exports = tree;\n"},"lineCount":70}},"error":null,"hash":"67356f3cd725c34d471a6475bb3102c0","cacheData":{"env":{}}}